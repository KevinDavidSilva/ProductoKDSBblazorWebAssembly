@page "/producto"
@inject PostService postService

<h3>Posts</h3>
<h1>Agregar nuevo Post</h1>

<EditForm Model="newPost" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label>Nombre</label>
        <InputText @bind-Value="newPost.NombreKDSB" class="form-control" />
        <ValidationMessage For="@(() => newPost.NombreKDSB)" />
    </div>
    <div class="mb-3">
        <label>Descripción</label>
        <InputText @bind-Value="newPost.DescripcionKDSB" class="form-control" />
        <ValidationMessage For="@(() => newPost.DescripcionKDSB)" />
    </div>
    <div class="mb-3">
        <label>Precio</label>
        <InputNumber @bind-Value="newPost.Precio" class="form-control" />
        <ValidationMessage For="@(() => newPost.Precio)" />
    </div>

    <button type="submit" class="btn btn-primary">Guardar Post</button>
</EditForm>

@if (posts == null)
{
    <p><em>Cargando....</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Descripción</th>
                <th>Precio</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var post in posts)
            {
                <tr>
                    <td>@post.NombreKDSB</td>
                    <td>@post.DescripcionKDSB</td>
                    <td>@post.Precio</td>
                </tr>
            }
        </tbody>
    </table>
}

@code
{
    private List<PostDTO> posts;

    private PostDTO newPost = new PostDTO();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            posts = await postService.GetPostAsync();
            posts = posts.OrderByDescending(s => s.Id).ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar los posts: {ex.Message}");
        }
    }


    private async Task HandleValidSubmit()
    {
        try
        {
            var createdPost = await postService.CreatePostAsync(newPost);

            if (createdPost != null)
            {
                posts.Add(createdPost);
                newPost = new PostDTO();
                posts = posts.OrderByDescending(s => s.Id).ToList();
            }
            else
            {
                Console.WriteLine("Error: No se pudo crear el post.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al enviar el formulario: {ex.Message}");
        }
    }

}
